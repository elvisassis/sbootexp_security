package br.com.elvisassis.sbootexp_secutiry.api;import br.com.elvisassis.sbootexp_secutiry.domain.dto.RequestUserDTO;import br.com.elvisassis.sbootexp_secutiry.domain.dto.UserDTO;import br.com.elvisassis.sbootexp_secutiry.domain.service.UserService;import io.swagger.v3.oas.annotations.security.SecurityRequirement;import io.swagger.v3.oas.annotations.tags.Tag;import org.springframework.http.ResponseEntity;import org.springframework.security.access.prepost.PreAuthorize;import org.springframework.web.bind.annotation.*;import java.util.List;@RestController@RequestMapping("/api/usuarios")@Tag(name = "User", description = "Endpoints for Managing User")public class UserController {    private final UserService service;    public UserController(UserService service) {        this.service = service;    }    @PostMapping    @PreAuthorize("hasRole('ADMIN')")    @SecurityRequirement(name = "jwt")    public ResponseEntity<RequestUserDTO> save(@RequestBody RequestUserDTO dto) {        var response = service.save(dto);        return ResponseEntity.ok(response);    }    @GetMapping    @PreAuthorize("hasRole('ADMIN')")    @SecurityRequirement(name = "jwt")    public ResponseEntity<List<UserDTO>> findAll() {        var response = service.findAll();        return ResponseEntity.ok(response);    }}