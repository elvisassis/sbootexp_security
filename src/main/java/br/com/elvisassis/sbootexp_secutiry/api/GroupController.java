package br.com.elvisassis.sbootexp_secutiry.api;import br.com.elvisassis.sbootexp_secutiry.domain.dto.GroupDTO;import br.com.elvisassis.sbootexp_secutiry.domain.service.GroupService;import io.swagger.v3.oas.annotations.tags.Tag;import org.springframework.http.ResponseEntity;import org.springframework.security.access.prepost.PreAuthorize;import org.springframework.security.core.Authentication;import org.springframework.web.bind.annotation.*;import java.util.List;@RestController@RequestMapping("/api/grupos")@Tag(name = "Group", description = "Endpoints for Managing Groups")public class GroupController {    private final GroupService service;    public GroupController(GroupService groupService) {        this.service = groupService;    }    @PostMapping    @PreAuthorize("hasRole('ADMIN')")    public ResponseEntity<GroupDTO> save(@RequestBody GroupDTO dto, Authentication authentication) {        var response = service.save(dto);        return ResponseEntity.ok(response);    }    @GetMapping    @PreAuthorize("hasRole('ADMIN')")    public ResponseEntity<List<GroupDTO>> findaAll() {        var response = service.findAll();        return ResponseEntity.ok(response);    }}